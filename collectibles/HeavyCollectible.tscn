[gd_scene load_steps=8 format=3 uid="uid://bqwvti0wxf0vp"]

[ext_resource type="PackedScene" uid="uid://vr53pu3qcsa3" path="res://Scenes/BaseCollectible.tscn" id="1_dva43"]
[ext_resource type="Texture2D" uid="uid://bx6jm5cbinwip" path="res://textures/Dev/Light/texture_07.png" id="2_wkyd3"]

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_f2eno"]
data = PackedVector3Array(-0.75, 0.75, 0.75, 0.75, 0.75, 0.75, -0.75, -0.75, 0.75, 0.75, 0.75, 0.75, 0.75, -0.75, 0.75, -0.75, -0.75, 0.75, 0.75, 0.75, -0.75, -0.75, 0.75, -0.75, 0.75, -0.75, -0.75, -0.75, 0.75, -0.75, -0.75, -0.75, -0.75, 0.75, -0.75, -0.75, 0.75, 0.75, 0.75, 0.75, 0.75, -0.75, 0.75, -0.75, 0.75, 0.75, 0.75, -0.75, 0.75, -0.75, -0.75, 0.75, -0.75, 0.75, -0.75, 0.75, -0.75, -0.75, 0.75, 0.75, -0.75, -0.75, -0.75, -0.75, 0.75, 0.75, -0.75, -0.75, 0.75, -0.75, -0.75, -0.75, 0.75, 0.75, 0.75, -0.75, 0.75, 0.75, 0.75, 0.75, -0.75, -0.75, 0.75, 0.75, -0.75, 0.75, -0.75, 0.75, 0.75, -0.75, -0.75, -0.75, 0.75, 0.75, -0.75, 0.75, -0.75, -0.75, -0.75, 0.75, -0.75, 0.75, 0.75, -0.75, -0.75, -0.75, -0.75, -0.75)

[sub_resource type="Shader" id="Shader_nav54"]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform vec4 outline_color : source_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	if (outline_color.a < 1.0) {
		ALPHA = outline_color.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_goaxv"]
render_priority = 0
shader = SubResource("Shader_nav54")
shader_parameter/outline_color = Color(0.301961, 0.784314, 0.309804, 0)
shader_parameter/outline_width = 1.5

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_mvdq5"]
next_pass = SubResource("ShaderMaterial_goaxv")
albedo_texture = ExtResource("2_wkyd3")
uv1_triplanar = true

[sub_resource type="BoxMesh" id="BoxMesh_75o71"]
material = SubResource("StandardMaterial3D_mvdq5")
size = Vector3(1.5, 1.5, 1.5)

[node name="BaseCollectible" instance=ExtResource("1_dva43")]
self_destruct = true
object_weight = 12.0
object_value_low = 84.0
object_value_high = 100.0

[node name="CollisionShape3D" type="CollisionShape3D" parent="Area3D" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.75, 0)
shape = SubResource("ConcavePolygonShape3D_f2eno")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Model" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.75, 0)
mesh = SubResource("BoxMesh_75o71")
